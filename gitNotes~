GIT:

git init - vytvori repo

git status - vypise jestli je nejaky novy soubor, nebo pridany soubor, a co je pripraveno ke komitu

git add - prida soubory ci slozky do sledovani, ty pak muzu komitovat (muzu pouzit i zapis *.suffix)

 git add -A - prida vse v aktualnim adresari(prej i smazany) ke sledovani

git commit: komituju, -m 'zprava' nebo "zprava" parametr message

example:

git commit -a -m 'zprava'

git log - zobrazi komity a info o nich

git remote add jmenoRepo URL (jmeno repozitare je mysleno jmeno na github) (zjistit vic o fetch)
jo muzu si to pojmenovat jak chci, nemusi to byt stejne jako na githubu, ale prijde mi to logicky

git push -u jmenoRepo jmenoVetve - hodi vse komitovane do repa na githubu do vetve, parametr -u je proto, aby si git zapamatoval parametry a pak muzu dat uz jen git push bez parametru
example: git push -u jmenoRepa master - hodi komit do hlavni vetve repa na githubu

git pull jmenoRepo jmenoVetve - jmeno co jsem si nastavil a treba master(hlavni vetev), v podstate checkout posledni verze(jsou tam ale i predchozi)

zjisteni zmen git diff HEAD - po checkout - pull kontroluje jak se lisi co mam u sebe oproti vzdalenemu repu, je case sensitive musi byt HEAD

git diff --staged - zjisti co se zmenilo mezi pripravenyma na zmenu a posledni verzi repa, kterou mam u sebe

git reset jmenoSouboru - odstrani ze Stage (priprava na commit) 

git checkout - zjisti vic

git branch jmenoVetve - zalozeni vetve
